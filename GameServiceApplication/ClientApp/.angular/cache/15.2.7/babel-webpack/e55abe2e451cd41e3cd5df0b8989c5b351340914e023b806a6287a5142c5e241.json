{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class Config {\n  constructor() {\n    this.apiRootUrl = Config.NONE_URL;\n    this.playerProfilesEndpoint = Config.NONE_URL;\n  }\n}\nConfig.NONE_URL = \"[none_url]\";\nexport class ConfigService {\n  constructor(http) {\n    this.http = http;\n    this.configUrl = \"assets/config.json\";\n  }\n  getConfig() {\n    return this.http.get(this.configUrl);\n  }\n}\nConfigService.ɵfac = function ConfigService_Factory(t) {\n  return new (t || ConfigService)(i0.ɵɵinject(i1.HttpClient));\n};\nConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConfigService,\n  factory: ConfigService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,MAAM;EAAnBC;IAGE,eAAU,GAAGD,MAAM,CAACE,QAAQ;IAC5B,2BAAsB,GAAGF,MAAM,CAACE,QAAQ;EAC1C;;AALaF,MAAM,CACME,QAAQ,GAAG,YAAY;AAShD,OAAM,MAAOC,aAAa;EAGxBF,YAAoBG,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,cAAS,GAAG,oBAAoB;EAEQ;EAExCC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,IAAI,CAACC,SAAS,CAAC;EAC9C;;AAPWJ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAK,SAAbL,aAAa;EAAAM,YAFZ;AAAM","names":["Config","constructor","NONE_URL","ConfigService","http","getConfig","get","configUrl","factory","providedIn"],"sourceRoot":"","sources":["E:\\CSharpProjects\\GameServiceApplication\\GameServiceApplication\\GameServiceApplication\\ClientApp\\src\\app\\config\\config.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\nexport interface ConfigRm {\n  apiRootUrl: string;\n  playerProfilesEndpoint: string;\n}\n\nexport class Config implements ConfigRm{\n  public static readonly NONE_URL = \"[none_url]\";\n\n  apiRootUrl = Config.NONE_URL;\n  playerProfilesEndpoint = Config.NONE_URL;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  configUrl = \"assets/config.json\";\n\n  constructor(private http: HttpClient) { }\n\n  getConfig() : Config {\n    return this.http.get<Config>(this.configUrl);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}